// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaTurnos.Dal.Data;

#nullable disable

namespace SistemaTurnos.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240715005648_inicialUsuarios")]
    partial class inicialUsuarios
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.DiaSemana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DiasSemana");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Lunes"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Martes"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Miercoles"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Jueves"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Viernes"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Sabado"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Domingo"
                        });
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.DisponibilidadMedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiaSemanaId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("DiaSemanaId");

                    b.HasIndex("MedicoId");

                    b.ToTable("DisponibilidadMedicos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiaSemanaId = 1,
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            MedicoId = 5,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            DiaSemanaId = 3,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            MedicoId = 5,
                            StartTime = new TimeSpan(0, 13, 0, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            DiaSemanaId = 2,
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            MedicoId = 6,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            DiaSemanaId = 4,
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            MedicoId = 7,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            DiaSemanaId = 5,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            MedicoId = 7,
                            StartTime = new TimeSpan(0, 14, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Especialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Especialidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Especialidad médica que se ocupa del estudio, diagnóstico y tratamiento de las enfermedades del corazón y del sistema circulatorio.",
                            Nombre = "Cardiología"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Especialidad médica que se encarga del estudio de la piel, su estructura, función y enfermedades.",
                            Nombre = "Dermatología"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Especialidad médica que se encarga del estudio, diagnóstico y tratamiento de las enfermedades del sistema nervioso.",
                            Nombre = "Neurología"
                        });
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.EstadoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadoUsuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Activo"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Inactivo"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Suspendido"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Eliminado"
                        });
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SexoId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoUsuarioId");

                    b.HasIndex("SexoId");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Pérez",
                            Email = "juan.perez@example.com",
                            EstadoUsuarioId = 1,
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(1697),
                            FechaNacimiento = new DateTime(1985, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Juan",
                            NumeroDocumento = "12345678",
                            SexoId = 1,
                            Telefono = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Gómez",
                            Email = "maria.gomez@example.com",
                            EstadoUsuarioId = 1,
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(1712),
                            FechaNacimiento = new DateTime(1990, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "María",
                            NumeroDocumento = "87654321",
                            SexoId = 2,
                            Telefono = "987654321"
                        });
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Secretario"
                        });
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Sexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sexos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Hombre"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Mujer"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Otro"
                        });
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Turno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Turnos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Estado = "Programada",
                            Fecha = new DateTime(2024, 7, 15, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(6516),
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(6513),
                            MedicoId = 5,
                            PacienteId = 3
                        },
                        new
                        {
                            Id = 2,
                            Estado = "Cancelada",
                            Fecha = new DateTime(2024, 7, 16, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(6524),
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(6523),
                            MedicoId = 6,
                            PacienteId = 4
                        },
                        new
                        {
                            Id = 3,
                            Estado = "Completada",
                            Fecha = new DateTime(2024, 7, 17, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(6526),
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(6525),
                            MedicoId = 7,
                            PacienteId = 3
                        },
                        new
                        {
                            Id = 4,
                            Estado = "LLamando",
                            Fecha = new DateTime(2024, 7, 18, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(6528),
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(6527),
                            MedicoId = 5,
                            PacienteId = 4
                        },
                        new
                        {
                            Id = 5,
                            Estado = "EnProgreso",
                            Fecha = new DateTime(2024, 7, 19, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(6531),
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(6530),
                            MedicoId = 6,
                            PacienteId = 3
                        },
                        new
                        {
                            Id = 6,
                            Estado = "Finalizada",
                            Fecha = new DateTime(2024, 7, 20, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(6533),
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(6532),
                            MedicoId = 7,
                            PacienteId = 4
                        },
                        new
                        {
                            Id = 7,
                            Estado = "NoAsistida",
                            Fecha = new DateTime(2024, 7, 21, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(6535),
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(6534),
                            MedicoId = 5,
                            PacienteId = 3
                        });
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "a",
                            PersonaId = 1,
                            UserName = "persona"
                        },
                        new
                        {
                            Id = 2,
                            Password = "a",
                            PersonaId = 3,
                            UserName = "paciente"
                        },
                        new
                        {
                            Id = 3,
                            Password = "a",
                            PersonaId = 5,
                            UserName = "medico"
                        },
                        new
                        {
                            Id = 4,
                            Password = "a",
                            PersonaId = 8,
                            UserName = "secretario"
                        },
                        new
                        {
                            Id = 5,
                            Password = "a",
                            PersonaId = 9,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Administrativo", b =>
                {
                    b.HasBaseType("SistemaTurnos.Dal.Entities.Persona");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasIndex("RolId");

                    b.HasDiscriminator().HasValue("Administrativo");

                    b.HasData(
                        new
                        {
                            Id = 8,
                            Apellido = "Martínez",
                            Email = "laura.martinez@ejemplo.com",
                            EstadoUsuarioId = 1,
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(5037),
                            FechaNacimiento = new DateTime(1990, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Laura",
                            NumeroDocumento = "DNI65432100",
                            SexoId = 2,
                            Telefono = "111222333",
                            RolId = 1
                        },
                        new
                        {
                            Id = 9,
                            Apellido = "Sánchez",
                            Email = "pedro.sanchez@ejemplo.com",
                            EstadoUsuarioId = 1,
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(5042),
                            FechaNacimiento = new DateTime(1982, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Pedro",
                            NumeroDocumento = "DNI12345001",
                            SexoId = 1,
                            Telefono = "444555666",
                            RolId = 2
                        });
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Medico", b =>
                {
                    b.HasBaseType("SistemaTurnos.Dal.Entities.Persona");

                    b.Property<int>("EspecialidadId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroLicencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("EspecialidadId");

                    b.HasDiscriminator().HasValue("Medico");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Apellido = "Pérez",
                            Email = "juan.perez@ejemplo.com",
                            EstadoUsuarioId = 1,
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(3898),
                            FechaNacimiento = new DateTime(1980, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Juan",
                            NumeroDocumento = "DNI12345678",
                            SexoId = 1,
                            Telefono = "123456789",
                            EspecialidadId = 1,
                            NumeroLicencia = "LIC1234"
                        },
                        new
                        {
                            Id = 6,
                            Apellido = "González",
                            Email = "maria.gonzalez@ejemplo.com",
                            EstadoUsuarioId = 1,
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(3902),
                            FechaNacimiento = new DateTime(1975, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "María",
                            NumeroDocumento = "DNI87654321",
                            SexoId = 2,
                            Telefono = "987654321",
                            EspecialidadId = 2,
                            NumeroLicencia = "LIC5678"
                        },
                        new
                        {
                            Id = 7,
                            Apellido = "López",
                            Email = "carlos.lopez@ejemplo.com",
                            EstadoUsuarioId = 1,
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(3905),
                            FechaNacimiento = new DateTime(1985, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Carlos",
                            NumeroDocumento = "DNI23456789",
                            SexoId = 1,
                            Telefono = "555123456",
                            EspecialidadId = 3,
                            NumeroLicencia = "LIC9101"
                        });
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Paciente", b =>
                {
                    b.HasBaseType("SistemaTurnos.Dal.Entities.Persona");

                    b.Property<string>("NombreEmergencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoEmergencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Paciente");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Apellido = "Pérez",
                            Email = "juan.perez@example.com",
                            EstadoUsuarioId = 1,
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(3403),
                            FechaNacimiento = new DateTime(1985, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Juan",
                            NumeroDocumento = "45345678",
                            SexoId = 1,
                            Telefono = "123452389",
                            NombreEmergencia = "Ana Pérez",
                            TelefonoEmergencia = "1122334455"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "Gómez",
                            Email = "maria.gomez@example.com",
                            EstadoUsuarioId = 1,
                            FechaCreacion = new DateTime(2024, 7, 14, 21, 56, 47, 733, DateTimeKind.Local).AddTicks(3409),
                            FechaNacimiento = new DateTime(1990, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "María",
                            NumeroDocumento = "12345678",
                            SexoId = 2,
                            Telefono = "123456756",
                            NombreEmergencia = "Carlos Gómez",
                            TelefonoEmergencia = "2233445566"
                        });
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.DisponibilidadMedico", b =>
                {
                    b.HasOne("SistemaTurnos.Dal.Entities.DiaSemana", "DiaSemana")
                        .WithMany()
                        .HasForeignKey("DiaSemanaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaTurnos.Dal.Entities.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaSemana");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Persona", b =>
                {
                    b.HasOne("SistemaTurnos.Dal.Entities.EstadoUsuario", "EstadoUsuario")
                        .WithMany()
                        .HasForeignKey("EstadoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaTurnos.Dal.Entities.Sexo", "Sexo")
                        .WithMany()
                        .HasForeignKey("SexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoUsuario");

                    b.Navigation("Sexo");
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Turno", b =>
                {
                    b.HasOne("SistemaTurnos.Dal.Entities.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaTurnos.Dal.Entities.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Usuario", b =>
                {
                    b.HasOne("SistemaTurnos.Dal.Entities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Administrativo", b =>
                {
                    b.HasOne("SistemaTurnos.Dal.Entities.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Medico", b =>
                {
                    b.HasOne("SistemaTurnos.Dal.Entities.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidad");
                });
#pragma warning restore 612, 618
        }
    }
}
