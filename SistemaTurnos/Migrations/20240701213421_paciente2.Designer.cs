// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaTurnos.Dal.Data;

#nullable disable

namespace SistemaTurnos.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240701213421_paciente2")]
    partial class paciente2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Especialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroDocumento")
                        .HasColumnType("int");

                    b.Property<int>("SexoId")
                        .HasColumnType("int");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SexoId");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Sexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sexos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Hombre"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Mujer"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Otro"
                        });
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Administrativo", b =>
                {
                    b.HasBaseType("SistemaTurnos.Dal.Entities.Persona");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasIndex("RolId");

                    b.HasDiscriminator().HasValue("Administrativo");
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Medico", b =>
                {
                    b.HasBaseType("SistemaTurnos.Dal.Entities.Persona");

                    b.Property<int>("EspecialidadId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroLicencia")
                        .HasColumnType("int");

                    b.HasIndex("EspecialidadId");

                    b.HasDiscriminator().HasValue("Medico");
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Paciente", b =>
                {
                    b.HasBaseType("SistemaTurnos.Dal.Entities.Persona");

                    b.Property<string>("NombreEmergencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoEmergencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Paciente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Pérez",
                            Email = "juan.perez@example.com",
                            FechaCreacion = new DateTime(2024, 7, 1, 18, 34, 21, 576, DateTimeKind.Local).AddTicks(3149),
                            FechaNacimiento = new DateTime(1985, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Juan",
                            NumeroDocumento = 12345678,
                            SexoId = 1,
                            Telefono = 123456789,
                            NombreEmergencia = "Ana Pérez",
                            TelefonoEmergencia = "1122334455"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Gómez",
                            Email = "maria.gomez@example.com",
                            FechaCreacion = new DateTime(2024, 7, 1, 18, 34, 21, 576, DateTimeKind.Local).AddTicks(3170),
                            FechaNacimiento = new DateTime(1990, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "María",
                            NumeroDocumento = 87654321,
                            SexoId = 2,
                            Telefono = 987654321,
                            NombreEmergencia = "Carlos Gómez",
                            TelefonoEmergencia = "2233445566"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Rodríguez",
                            Email = "pedro.rodriguez@example.com",
                            FechaCreacion = new DateTime(2024, 7, 1, 18, 34, 21, 576, DateTimeKind.Local).AddTicks(3173),
                            FechaNacimiento = new DateTime(1988, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Pedro",
                            NumeroDocumento = 56781234,
                            SexoId = 1,
                            Telefono = 456789123,
                            NombreEmergencia = "Lucía Rodríguez",
                            TelefonoEmergencia = "3344556677"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "Martínez",
                            Email = "ana.martinez@example.com",
                            FechaCreacion = new DateTime(2024, 7, 1, 18, 34, 21, 576, DateTimeKind.Local).AddTicks(3175),
                            FechaNacimiento = new DateTime(1995, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Ana",
                            NumeroDocumento = 34567812,
                            SexoId = 2,
                            Telefono = 654321789,
                            NombreEmergencia = "Miguel Martínez",
                            TelefonoEmergencia = "4455667788"
                        },
                        new
                        {
                            Id = 5,
                            Apellido = "Gutiérrez",
                            Email = "lucas.gutierrez@example.com",
                            FechaCreacion = new DateTime(2024, 7, 1, 18, 34, 21, 576, DateTimeKind.Local).AddTicks(3177),
                            FechaNacimiento = new DateTime(1987, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Lucas",
                            NumeroDocumento = 78123456,
                            SexoId = 1,
                            Telefono = 789123456,
                            NombreEmergencia = "Sofía Gutiérrez",
                            TelefonoEmergencia = "5566778899"
                        },
                        new
                        {
                            Id = 6,
                            Apellido = "López",
                            Email = "laura.lopez@example.com",
                            FechaCreacion = new DateTime(2024, 7, 1, 18, 34, 21, 576, DateTimeKind.Local).AddTicks(3180),
                            FechaNacimiento = new DateTime(1993, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Laura",
                            NumeroDocumento = 23456781,
                            SexoId = 2,
                            Telefono = 321654987,
                            NombreEmergencia = "Juan López",
                            TelefonoEmergencia = "6677889900"
                        },
                        new
                        {
                            Id = 7,
                            Apellido = "Sánchez",
                            Email = "gabriel.sanchez@example.com",
                            FechaCreacion = new DateTime(2024, 7, 1, 18, 34, 21, 576, DateTimeKind.Local).AddTicks(3182),
                            FechaNacimiento = new DateTime(1986, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Gabriel",
                            NumeroDocumento = 67812345,
                            SexoId = 1,
                            Telefono = 896745231,
                            NombreEmergencia = "Elena Sánchez",
                            TelefonoEmergencia = "7788990011"
                        },
                        new
                        {
                            Id = 8,
                            Apellido = "Fernández",
                            Email = "carolina.fernandez@example.com",
                            FechaCreacion = new DateTime(2024, 7, 1, 18, 34, 21, 576, DateTimeKind.Local).AddTicks(3184),
                            FechaNacimiento = new DateTime(1991, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Carolina",
                            NumeroDocumento = 45678123,
                            SexoId = 2,
                            Telefono = 478512369,
                            NombreEmergencia = "María Fernández",
                            TelefonoEmergencia = "8899001122"
                        },
                        new
                        {
                            Id = 9,
                            Apellido = "Díaz",
                            Email = "jorge.diaz@example.com",
                            FechaCreacion = new DateTime(2024, 7, 1, 18, 34, 21, 576, DateTimeKind.Local).AddTicks(3188),
                            FechaNacimiento = new DateTime(1989, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Jorge",
                            NumeroDocumento = 56781234,
                            SexoId = 1,
                            Telefono = 369874512,
                            NombreEmergencia = "Carlos Díaz",
                            TelefonoEmergencia = "9900112233"
                        },
                        new
                        {
                            Id = 10,
                            Apellido = "Ramírez",
                            Email = "valeria.ramirez@example.com",
                            FechaCreacion = new DateTime(2024, 7, 1, 18, 34, 21, 576, DateTimeKind.Local).AddTicks(3237),
                            FechaNacimiento = new DateTime(1994, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Valeria",
                            NumeroDocumento = 67812345,
                            SexoId = 2,
                            Telefono = 214365879,
                            NombreEmergencia = "Ana Ramírez",
                            TelefonoEmergencia = "0011223344"
                        });
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Persona", b =>
                {
                    b.HasOne("SistemaTurnos.Dal.Entities.Sexo", "Sexo")
                        .WithMany()
                        .HasForeignKey("SexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sexo");
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Administrativo", b =>
                {
                    b.HasOne("SistemaTurnos.Dal.Entities.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("SistemaTurnos.Dal.Entities.Medico", b =>
                {
                    b.HasOne("SistemaTurnos.Dal.Entities.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidad");
                });
#pragma warning restore 612, 618
        }
    }
}
